version: "3.9"

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: appdb
    ports:
      - "5432:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d appdb"]
      interval: 5s
      timeout: 3s
      retries: 10

  web:
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      FLASK_ENV: production
      FLASK_DEBUG: "0"
      DATABASE_URL: postgresql://app:app@db:5432/appdb
      FLASK_APP: app.py
    depends_on:
      db:
        condition: service_healthy
    restart: always
    command: >
      /bin/sh -c "
      /usr/bin/wait-for-it.sh db:5432 --timeout=30 -- echo 'Database is up!';

      gunicorn --bind 0.0.0.0:8000 app:app
      "

  test:
    build:
      context: ./
      dockerfile: Dockerfile
    command: ["python3", "/app/tests/test_api.py"]
    depends_on:
      - web
    environment:
      - APP_BASE_URL=http://web:8000
      - APP_CHECK_TIMEOUT=20

volumes:
  dbdata:
